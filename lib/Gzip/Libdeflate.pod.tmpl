[% start_year=2021 %]
[% MACRO example(file) BLOCK %]
[%- pl =  file _ ".pl" -%]
[%- out = file _ "-out.txt" -%]
[% INCLUDE $pl | xtidy %]

produces output

[% INCLUDE $out | xtidy %]

(This example is included as L<F<[% pl %]>|https://fastapi.metacpan.org/source/BKB/Gzip-Libdeflate-[% info.version %]/examples/[% pl %]> in the distribution.)
[% END %]
[% MACRO since(version) BLOCK -%]
This method was added in version [% version %] of the module.
[%- END %]
=encoding UTF-8

=head1 NAME

[% info.colon %] - Perl interface to libdeflate

=head1 SYNOPSIS

    use [% info.colon %];

=head1 VERSION

This documents version [% info.version %] of [% info.name %]
corresponding to L<git commit [% commit.commit %]|[% info.repo
%]/commit/[% commit.commit %]> released on [% commit.date %]. This
distribution also includes libdeflate version [% libdeflate_version
%]. 

=head1 DESCRIPTION

Interface to libdeflate. libdeflate offers the same forms of
compression as zlib, as used in gzip, libpng and similar
utilities. This distribution includes libdeflate within itself, so it
is not necessary to have that on your system.

=head1 METHODS

=head2 compressor

    my $co = Gzip::Libdeflate->compressor (%options);

=over

=item level

    my $co = Gzip::Libdeflate->compressor (level => 9);

An optional number argument of compression level from 1 (fast and poor
compression) to 12 (slow and good compression).  If you do not specify
it, the default is 6. These correspond to the compression levels of
zlib, but with extra compression levels 10-12 also added. See L</About
libdeflate> for details.

=item type

    my $co = Gzip::Libdeflate->compressor (type => 'deflate');

Change the type of compression. The default is type C<gzip> but you
can also choose C<deflate> and C<zlib>. These are all the same thing
up to headers.

=back

=head2 decompressor

    my $de = Gzip::Libdeflate->decompressor (%options);

=over 

=item type

Either C<deflate>, C<zlib>, or C<gzip> (the default). See
L</compressor> for details.

=back

=head2 compress

    my $comp_thing = $gl->compress ($thing);

Compress input C<$thing> using whatever compression level and type you
have specified for C<$gl> in L</compressor>.

=head2 decompress

    my $thing = $gl->decompress ($dthing);

Decompress c<$comp_thing> into C<$thing>. If you have chosen the
C<zlib> or C<deflate> options in L</decompressor>, you also need to
specify the expected size of C<$thing>.

    my $thing = $gl->decompress ($dthing, 1000);

In the C<gzip> format, the size is stored within the data itself so it
doesn't need to be specified.

=head1 SEE ALSO

=head2 About libdeflate

Libdeflate is an updated version of C<zlib>. See the L<Libdeflate
github repository|https://github.com/ebiggers/libdeflate> for
information.

=head2 CPAN modules

=over

=item L<Alien::libdeflate>

=back

[% INCLUDE "author" %]

Libdeflate's copyright and licence are as follows.

[% INCLUDE "biggers" %]

